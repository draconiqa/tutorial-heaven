import type { AddPluginConfig } from '@graphql-codegen/add';
import type { CodegenConfig } from '@graphql-codegen/cli';
import type { TypeScriptPluginConfig } from '@graphql-codegen/typescript';
import type { TypeScriptResolversPluginConfig } from '@graphql-codegen/typescript-resolvers';
import type { IGraphQLConfig } from 'graphql-config';

const add: AddPluginConfig = {
  content: [
    '/* DO NOT EDIT MANUALLY - this file is generated by GraphQL Code Generator */',
    '/* eslint-disable */',
  ],
};

const codegen: CodegenConfig = {
  config: {
    strictScalars: true,
    enumsAsTypes: true,
    useTypeImports: true,
  } satisfies TypeScriptPluginConfig,
  generates: {
    // API - Apollo Server, Express
    './apps/api/src/app/types/generated.ts': {
      plugins: [{ add }, 'typescript', 'typescript-resolvers'],
      config: {
        useIndexSignature: true,
        contextType: './context#Context',
      } satisfies TypeScriptResolversPluginConfig,
    },
    // CMS - Apollo Client, Angular SPA
    './apps/cms/src/app/graphql/generated.ts': {
      documents: ['./apps/cms/src/app/graphql/**/*.graphql'],
      plugins: [
        { add },
        'typescript',
        'typescript-operations',
        'typescript-apollo-angular',
      ],
    },
    // Website - Apollo Client, Next.js SSR
    './apps/website/src/lib/graphql/generated/': {
      documents: ['./apps/website/src/**/*.{ts,tsx}'],
      preset: 'client',
    },
  },
  hooks: {
    afterAllFileWrite: ['prettier --write'],
  },
  ignoreNoDocuments: true,
};

const config: IGraphQLConfig = {
  schema: './apps/api/src/app/schema.ts',
  extensions: { codegen },
};

export default config;
