import type { AddPluginConfig } from '@graphql-codegen/add';
import type { CodegenConfig } from '@graphql-codegen/cli';
import type { TypeScriptPluginConfig } from '@graphql-codegen/typescript';
import type { TypeScriptResolversPluginConfig } from '@graphql-codegen/typescript-resolvers';
import type { IGraphQLConfig } from 'graphql-config';

const add: AddPluginConfig = {
  content: [
    '/* DO NOT EDIT MANUALLY - this file is generated by GraphQL Code Generator */',
    '/* eslint-disable */',
  ],
};

const codegen: CodegenConfig = {
  generates: {
    './apps/api/src/app/types/generated.ts': {
      plugins: [{ add }, 'typescript', 'typescript-resolvers'],
      config: {
        useIndexSignature: true,
        contextType: './context#Context',
        strictScalars: true,
        constEnums: true,
        useTypeImports: true,
      } satisfies TypeScriptPluginConfig & TypeScriptResolversPluginConfig,
    },
  },
  hooks: {
    afterAllFileWrite: ['prettier --write'],
  },
};

const config: IGraphQLConfig = {
  schema: './apps/api/src/app/schema.ts',
  extensions: { codegen },
};

export default config;
